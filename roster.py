import json
import sqlite3

conn = sqlite3.connect('rosterdb.sqlite')
cur = conn.cursor()

cur.executescript('''
DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Member;
DROP TABLE IF EXISTS Course;

CREATE TABLE User (
id INTEGER PRIMARY KEY AUTOINCREMENT,
name TEXT UNIQUE
);

CREATE TABLE Course(
id INTEGER PRIMARY KEY AUTOINCREMENT,
title TEXT UNIQUE
);

CREATE TABLE Member(
user_id INTEGER,
course_id INTEGER,
role INTEGER,
PRIMARY KEY (user_id, course_id)
);
''')

fname = "roster_data.json"

#above file is a json array, so json_data will be a list

str_data = open(fname).read()
json_data = json.loads(str_data)

#each entry in the list is a list with 3 elements
#student name, course title and the role of the student in that course

for entry in json_data:
     name = entry[0]
     title = entry[1]
     role = entry[2]

     print(name, title, role)

     #insert name into user table
     cur.execute('''INSERT OR IGNORE INTO User (name) VALUES (?)''', (name,))
     #fetches autogenerated id from table for that name
     cur.execute('''SELECT id FROM User WHERE name = ?''', (name, ))
     user_id = cur.fetchone()[0]

     #insert title into Course table
     cur.execute('''INSERT OR IGNORE INTO Course (title) VALUES (?)''', (title,))
     #fetch autogenerated id from course table for that title
     cur.execute('''SELECT id from  Course WHERE title = ?''', (title,))
     course_id = cur.fetchone()[0]

     #insert composite key into the junction Member table

     cur.execute('''INSERT OR REPLACE INTO Member (user_id, course_id, role)
     VALUES (?,?, ?)''', (user_id, course_id, role))

conn.commit()

#cur.execute('''SELECT id FROM User WHERE name = "Ian" ''')
#print(cur.fetchone())
